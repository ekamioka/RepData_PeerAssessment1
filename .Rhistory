select(sat ,-contains("total"))
x <- select(sat ,-contains("total"))
gather(part_sex, count, -score_range)
gather(x, part_sex, count, -score_range)
y <- gather(x, part_sex, count, -score_range)
separate(y, "part", "sex")
?separate
separate(y, "part_sex")
separate(y, "part_sex", into = c("part","sex"))
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19/20/12")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
now(tzone = "America/New_York")
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"))
qplot(displ, hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~drv)
qplot(displ, hwy, data = mpg, facets = drv~., binwiddth =2)
qplot(hwy, data = mpg, facets = drv~., binwiddth =2)
head(maacs)
library(lattice)
xyplot()
class(xyplot())
class(xyplot(data = data))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
install.packages(knitr)
install.packages("knitr")
install.packages("kern")
install.packages("kernlab")
data(spam)
library(kernlab)
data(spam)
spam
library(data.table)
spam = data.table(spam)
spam
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
trainSpam
str(spam)
setwd("C:/Users/GAAS/Desktop/workspace/EIG/ebmd/src/r-scripts/br-producao-analysis")
source('C:/Users/GAAS/Desktop/workspace/EIG/ebmd/src/r-scripts/br-clima-data-getting-cleaning/clima-mean-by-year-station.R', echo=TRUE)
str(dt_mean)
str(dt_mean_uf)
dt_mean_uf <- data.table(aggregate(. ~ UF + Year + Estacao
, dt
, FUN = "mean"
, na.rm = TRUE
, na.action = NULL)
[,c(1:2,6:11)])
str(dt_mean_uf)
[,c(1:3,6:11)])
## Aggregating all climate measures by UF - used to cross plot with productions data
dt_mean_uf <- data.table(aggregate(. ~ UF + Year + Estacao
, dt
, FUN = "mean"
, na.rm = TRUE
, na.action = NULL)
[,c(1:3,6:11)])
str(dt_mean_uf)
dt_mean_uf <- data.table(aggregate(. ~ UF + Year
)
))
dt_mean_uf <- data.table(aggregate(. ~ UF + Year
, dt
, FUN = "mean"
, na.rm = TRUE
, na.action = NULL)
[,c(1:3,6:11)])
dt_mean_uf <- data.table(aggregate(. ~ UF + Year
)))
str(dt_mean_uf)
dt_mean_uf
dt_mean_uf <- data.table(aggregate(. ~ UF + Estacao + Year
, dt
, FUN = "mean"
, na.rm = TRUE
, na.action = NULL)
[,c(1:3,6:11)])
dt_mean_uf
names(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(trainSpam$charHash ~ trainSpam$type)
plot(trainSpam$your ~ trainSpam$type)
plot(trainSpam$edu ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 0) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 0) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 0) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
hCluster = hclust(dist(t(log10(trainSpam[, 1:57] + 1))))
hCluster = hclust(dist(t(dt_mean_uf)))
?t
hCluster = hclust(dist(dt_mean_uf))
plot(hCluster)
hCluster = hclust(dist(log10(dt_mean_uf)))
data(spam)
spam
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
plot(log10(trainSpam[, 1:4] + 1))
plot(log10(trainSpam[, 1:10] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hCluster = hclust(dist(t(log10(trainSpam[, 1:57] + 1))))
plot(hCluster)
trainSpam$numType = as.numeric(trainSpam$type) - 1
head(trainSpam$numType)
tails(trainSpam$numType)
tail(trainSpam$numType)
costFuncion = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
?boot
for(i in 1:55){}
for(i in 1:55){
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFuncion, 2)$delta[2]
}
head(lmFormula)
head(glmFit)
costFuncion(2)
costFuncion(2,1)
costFuncion(2,2)
costFuncion(1,1)
costFuncion(1,2)
costFuncion(0,0)
costFuncion(0,1)
costFuncion(1,0)
costFuncion(2,0)
sum(1 != 0)
y
y = 0
y > 0.5
(y > 0.5)
sum(1 != (y > 0.5))
sum(2 != (y > 0.5))
y
y = 1
sum(2 != (y > 0.5))
sum(1 != (y > 0.5))
names(trainSpam)[which(cvError)]
names(trainSpam)[which.min(cvError)]
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
head(predictionModel)
predicitonTest = predict(predictionModel, testSpam)
head(predicitonTest)
predictedSpam = rep("nonspam", dim(testSpam)[1])
head(predictedSpam)
predictedSpam[predictionModel$fitted > 0.5] = "spam"
table(predictedSpam, testSpam$type)
## error rate
(61 + 458)/(1346 + 458 + 61 + 449)
lm()
fit = lm(data = dt_mean_uf)
dt_mean_uf
fit = lm(EvapoBHReal ~InsolacaoTotal, data = dt_mean_uf)
summary(fit)
plot(fit)
setwd("C:/Users/GAAS/Desktop/workspace/datascience/4-reproducible")
setwd("RepData_PeerAssessment1/")
list.files()
unzip()
unzip()
dt = data.table(read.csv(unzip("activity.zip"), sep = ",", header = TRUE, stringAsFactors = FALSE))
dt = data.table(read.csv(unzip("activity.zip"), sep = ",", header = TRUE, StringAsFactors = FALSE))
dt = data.table(read.csv2(unzip("activity.zip"), sep = ",", header = TRUE, StringAsFactors = FALSE))
dt = data.table(read.csv2(unzip("activity.zip"), sep = ",", header = TRUE, stringAsFactors = FALSE))
dt = data.table(read.csv2(unzip("activity.zip"), sep = ",", header = TRUE), stringAsFactors = FALSE)
dt
lapply(dt, class)
dt = data.table(read.csv2(unzip("activity.zip")
, sep = ","
, header = TRUE))
dt
lapply(dt, class)
dt$date = as.Date(dt$date, format="%d/%m/%Y")
dt
dt = data.table(read.csv2(unzip("activity.zip")
, sep = ","
, header = TRUE))
dt$date = as.Date(dt$date, format="%YYYY/%MM/%DD")
dt
dt = data.table(read.csv2(unzip("activity.zip")
, sep = ","
, header = TRUE))
dt$date = as.Date(dt$date, format="%Y/%m/%d")
dt
dt = data.table(read.csv2(unzip("activity.zip")
, sep = ","
, header = TRUE))
dt
as.Date(dt$date, format="%Y/%m/%d")
as.Date(dt$date, format="%yyyy/%m/%d")
as.Date(dt$date, format="%y/%m/%d")
as.Date(dt$date)
dt$date = as.Date(dt$date)
dt
year(dt$date)
dt
aggregate(steps ~ date, dt, FUN = "mean", na.ignore = TRUE)
hist(aggregate(steps ~ date, dt, FUN = "mean", na.ignore = TRUE))
hist(aggregate(steps ~ date, dt, FUN = "mean", na.ignore = TRUE)$steps)
dt
barplot(aggregate(steps ~ date
, dt
, FUN = "mean"
, na.ignore = TRUE))
barplot(aggregate(steps ~ date
, dt
, FUN = "mean"
, na.ignore = TRUE)$steps)
barplot(aggregate(steps ~ date
, dt
, FUN = "mean"
, na.ignore = TRUE)
$steps)
barplot(aggregate(steps ~ date
, dt
, FUN = "median"
, na.ignore = TRUE)
$steps)
barplot(aggregate(steps ~ date
, dt
, FUN = "median"
, na.rm = TRUE)
$steps)
barplot(aggregate(steps ~ date
, dt
, FUN = "median"
)
$steps)
barplot(aggregate(steps ~ date, dt, FUN = "median")$steps)
barplot(aggregate(steps ~ date, dt, FUN = "median", na.action = "ignore")$steps)
barplot(aggregate(steps ~ date, dt, FUN = "median")$steps)
median(dt$steps)
median(dt$steps, na.rm = TRUE)
mean = aggregate(steps ~ date
, dt
, FUN = "mean"
, na.ignore = TRUE)
barplot(mean$steps)
mean
month(dt$date)
month.name(dt$date)
months(dt$date)
mean$months = months(dt$date)
mean$months = months(mean$date)
qplot(steps, date, data =  mean, color=months, geom = c("point","line"), ylab = "Mean Total (Steps taken per day)")+
ggtitle("PM2.5 emissions in Baltimore City by type")
library(ggplot2)
qplot(steps, date, data =  mean, color=months, geom = c("point","line"), ylab = "Mean Total (Steps taken per day)")+
ggtitle("PM2.5 emissions in Baltimore City by type")
qplot(date, steps, data =  mean, color=months, geom = c("point","line"), ylab = "Mean Total (Steps taken per day)")+
ggtitle("PM2.5 emissions in Baltimore City by type")
qplot(date, steps, data =  mean, color=months, geom = c("point","bar"), ylab = "Steps taken", xlab = "Days")+
ggtitle("Mean Total (Steps taken per day)")
qplot(date, steps, data =  mean, color=months, geom_bar(stat="identity"), ylab = "Steps taken", xlab = "Days")+
ggtitle("Mean Total (Steps taken per day)")
qplot(date, steps, data =  mean, color=months, ylab = "Steps taken", xlab = "Days")+geom_bar(stat="identity")+
ggtitle("Mean Total (Steps taken per day)")
mean$months = months(mean$date)dt
dr
dt
qplot(date, steps, data =  mean, color=months, ylab = "Steps taken", xlab = "Days")+geom_bar(stat="identity")+
ggtitle("Mean Total (Steps taken per day)")
Sys.setlocale("LC_MESSAGES", 'en_EN.UTF-8')
Sys.setlocale("LC_ALL","C")
Sys.setlocale("LC_ALL","C") ## Adjust the language to English
qplot(date, steps, data =  mean
, color=months
, ylab = "Number of Steps"
, xlab = "Period - 2012 out 01/nov 30")
+ geom_bar(stat="identity")
+ ggtitle("Mean Total (Steps Taken Per Day)")
qplot(date, steps, data =  mean, color=months, ylab = "Steps taken", xlab = "Days")+geom_bar(stat="identity")+
ggtitle("Mean Total (Steps taken per day)")
library(ggplot2)
mean = aggregate(steps ~ date
, dt
, FUN = "mean"
, na.ignore = TRUE)
mean$months = months(mean$date)
qplot(date, steps, data =  mean, color=months, ylab = "Steps taken", xlab = "Days")+geom_bar(stat="identity")+
ggtitle("Mean Total (Steps taken per day)")
qplot(date, steps, data =  mean, color=months, ylab = "Steps taken", xlab = "Days")
+ geom_bar(stat="identity")
+ ggtitle("Mean Total (Steps taken per day)")
qplot(date, steps, data =  mean, color=months, ylab = "Steps taken", xlab = "Days")+geom_bar(stat="identity")+
ggtitle("Mean Total (Steps taken per day)")
qplot(date, steps, data =  mean, color=months, ylab = "Steps taken", xlab = "Days") +
geom_bar(stat="identity") +
ggtitle("Mean Total (Steps taken per day)")
qplot(date, steps, data =  mean
, color=months
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30") +
geom_bar(stat="bin") +
ggtitle("Mean Total (Steps Taken Per Day)")
qplot(date, steps, data =  mean
, color=months
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30") +
geom_bar(stat="identity") +
ggtitle("Mean Total (Steps Taken Per Day)")
summary(mean)
summary(mean$steps)
summary(mean$steps ~ mean$date)
hist(dt$steps)
hist(dt$steps ~ dt$date)
hist(mean)
hist(mean$steps)
hist(mean$steps, xlab =  = "Steps per day")
hist(mean$steps, xlab = "Steps per day")
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day")
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = 3)
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1:4))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,5))
summary(mean)
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,80))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,40))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,30))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,20))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(5,20))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,20))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,180))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,10))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(1,15))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(2,15))
summary(mean)
range(mean$steps)
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = range(mean$steps))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(0,15))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(0,25))
hist(mean$steps, xlab = "Steps each day", main = "Histogram - Total number of steps taken each day", ylim = c(0,20))
hist(mean$steps
, xlab = "Steps each day"
, main = "Histogram - Total number of steps taken each day",
, ylim = c(0,20)))
hist(mean$steps
, xlab = "Steps each day"
, main = "Histogram - Total number of steps taken each day",
, ylim = c(0,20))
class(dt$date)
qplot(date, steps, data =  mean
, color=months
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30", col=c("yellow","green")) +
geom_bar(stat="identity") +
ggtitle("Mean Total (Steps Taken Per Day)")
median = aggregate(steps ~ date
, dt
, FUN = "median"
, na.rm = TRUE)
median
median = aggregate(steps ~ date
, dt
, FUN = "median"
)
median
median(dt$steps)
median(dt$steps, na.rm = TRUE)
summary(dt)
table(mean$steps)
table(dt$steps)
dt
aggregate(steps ~ date + interval
, dt
, FUN = "mean"
, na.ignore = TRUE)
data.table(aggregate(steps ~ date + interval
, dt
, FUN = "mean"
, na.ignore = TRUE) )
qplot(date, steps, data =  dt
, color=months
, type = "l"
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30")
qplot(date, steps, data =  dt
, color=steps
, type = "l"
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30")
qplot(date, steps, data =  dt
, color=steps
, type = "l"
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30") + geom_line()
qplot(date, steps, data =  dt
, color=steps
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30") + geom_line(stat="identity")
qplot(date, steps, data =  dt
, color=steps
, ylab = "Number of Steps"
, xlab = "Period - 2012/out/01 to 2012/nov/30") +
geom_line(stat="identity")
plot(dt$interval)
plot(dt$interval, type = "l")
plot(dt$interval, ave(dt$steps) type = "l")
plot(dt$interval, ave(dt$steps), type = "l")
plot(dt$interval, ave(dt$steps ~ dt$date), type = "l")
plot(dt$interval, ave(dt$steps ~ dt$date, na.omit = TRUE), type = "l")
plot(dt$interval, ave(dt$steps ~ dt$date, na.exclude = TRUE), type = "l")
plot(dt$interval, ave(dt$steps ~ dt$date, na.exclude = TRUE), type = "l", na.exclude = TRUE)
plot(dt$interval, ave(dt$steps, na.exclude = TRUE), type = "l", na.exclude = TRUE)
plot(dt$interval, ave(dt$steps, na.exclude = TRUE), type = "l")
plot(dt$interval, mean(dt$steps), type = "l")
plot(mean(dt$steps), dt$interval, type = "l")
plot(dt$steps, dt$interval, type = "l")
plot(dt$interval, dt$steps, type = "l")
plot(dt$interval, mean$steps, type = "l")
plot(mean$interval, mean$steps, type = "l")
dt
summary(dt)
plot(dt$interval, mean(dt$steps), type = "l")
ave(dt$steps)
ave(dt$steps, na.exclude = TRUE)
ave(dt$steps, na.action = "ignore")
is.na(dt$steps)
dt
